{"ast":null,"code":"//TODO: create contact using all actions //Done\nimport { SET_CONTACT, SET_LOADING, CONTACT_TO_UPDATE, SET_SINGLE_CONTACT } from \"./action.types\"; //TODO: use switch case // Done\n\nexport default ((state, action) => {\n  switch (action.type) {\n    case SET_CONTACT:\n      return action.payload == null ? { ...state,\n        contacts: []\n      } : { ...state,\n        contacts: action.payload\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        isLoading: action.payload\n      };\n\n    case CONTACT_TO_UPDATE:\n      return { ...state,\n        contactToUpdate: action.payload,\n        contactUpdateKey: action.key\n      };\n\n    case SET_SINGLE_CONTACT:\n      return { ...state,\n        contact: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["I:/ReactJs_Course/contacts-app/src/context/reducer.js"],"names":["SET_CONTACT","SET_LOADING","CONTACT_TO_UPDATE","SET_SINGLE_CONTACT","state","action","type","payload","contacts","isLoading","contactToUpdate","contactUpdateKey","key","contact"],"mappings":"AAAA;AAEA,SACEA,WADF,EAEEC,WAFF,EAGEC,iBAHF,EAIEC,kBAJF,QAKO,gBALP,C,CAOA;;AAEA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAL;AACE,aAAOK,MAAM,CAACE,OAAP,IAAkB,IAAlB,GAAyB,EAAC,GAAGH,KAAJ;AAAUI,QAAAA,QAAQ,EAAC;AAAnB,OAAzB,GAAkD,EAAC,GAAGJ,KAAJ;AAAUI,QAAAA,QAAQ,EAACH,MAAM,CAACE;AAA1B,OAAzD;;AACF,SAAKN,WAAL;AACE,aAAO,EAAC,GAAGG,KAAJ;AAAWK,QAAAA,SAAS,EAAEJ,MAAM,CAACE;AAA7B,OAAP;;AACF,SAAKL,iBAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELM,QAAAA,eAAe,EAAEL,MAAM,CAACE,OAFnB;AAGLI,QAAAA,gBAAgB,EAAEN,MAAM,CAACO;AAHpB,OAAP;;AAKF,SAAKT,kBAAL;AACE,aAAO,EAAC,GAAGC,KAAJ;AAAWS,QAAAA,OAAO,EAAER,MAAM,CAACE;AAA3B,OAAP;;AACF;AACE,aAAOH,KAAP;AAdJ;AAgBD,CAjBD","sourcesContent":["//TODO: create contact using all actions //Done\n\nimport {\n  SET_CONTACT,\n  SET_LOADING,\n  CONTACT_TO_UPDATE,\n  SET_SINGLE_CONTACT\n} from \"./action.types\";\n\n//TODO: use switch case // Done\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_CONTACT:\n      return action.payload == null ? {...state,contacts:[]} : {...state,contacts:action.payload};\n    case SET_LOADING:\n      return {...state, isLoading: action.payload};\n    case CONTACT_TO_UPDATE:\n      return {\n        ...state, \n        contactToUpdate: action.payload,\n        contactUpdateKey: action.key\n      };\n    case SET_SINGLE_CONTACT:\n      return {...state, contact: action.payload};\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}